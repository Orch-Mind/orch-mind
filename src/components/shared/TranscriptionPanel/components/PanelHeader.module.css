/* SPDX-License-Identifier: MIT OR Apache-2.0
 * Copyright (c) 2025 Guilherme Ferrari Brescia
 */

.quantum-spin {
  animation: quantumSpin 4.5s linear infinite;
}

@keyframes quantumSpin {
  100% {
    transform: rotate(360deg);
  }
}

/* Glassmorphism button styles for header */
.glassButton {
  /* Layout */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  height: 2.5rem;
  padding: 0 1rem;
  border-radius: 9999px;

  /* Font */
  font-weight: 600;
  font-size: 0.875rem;
  color: #00faff;

  /* Glassmorphism effect */
  background: rgba(24, 24, 40, 0.55);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  backdrop-filter: blur(20px) saturate(180%);

  /* Border and shadow */
  border: 2px solid rgba(0, 250, 255, 0.3);
  box-shadow: 0 4px 16px 0 rgba(0, 250, 255, 0.15),
    inset 0 0 20px rgba(0, 250, 255, 0.05);

  /* Transitions */
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

/* Hover state */
.glassButton:hover {
  background: rgba(0, 250, 255, 0.1);
  border-color: rgba(0, 250, 255, 0.6);
  box-shadow: 0 0 24px 4px rgba(0, 250, 255, 0.3),
    inset 0 0 20px rgba(0, 250, 255, 0.1);
  transform: translateY(-1px);
}

/* Active state */
.glassButton:active {
  transform: translateY(0);
  box-shadow: 0 0 12px 2px rgba(0, 250, 255, 0.2),
    inset 0 0 20px rgba(0, 250, 255, 0.15);
}

/* Focus state for accessibility */
.glassButton:focus {
  outline: none;
}

.glassButton:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 250, 255, 0.4),
    0 0 24px 4px rgba(0, 250, 255, 0.3), inset 0 0 20px rgba(0, 250, 255, 0.1);
}

/* Shimmer effect on hover */
.glassButton::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 250, 255, 0.2),
    transparent
  );
  transition: left 0.5s ease;
}

.glassButton:hover::before {
  left: 100%;
}

/* Icon styling */
.glassButton svg {
  filter: drop-shadow(0 0 4px rgba(0, 250, 255, 0.5));
  transition: transform 0.2s ease;
}

.glassButton:hover svg {
  transform: scale(1.1);
  filter: drop-shadow(0 0 6px rgba(0, 250, 255, 0.7));
}

/* Debug button variant */
.glassButtonDebug {
  composes: glassButton;
  color: #ffa500;
  border-color: rgba(255, 165, 0, 0.3);
  box-shadow: 0 4px 16px 0 rgba(255, 165, 0, 0.15),
    inset 0 0 20px rgba(255, 165, 0, 0.05);
}

.glassButtonDebug:hover {
  background: rgba(255, 165, 0, 0.1);
  border-color: rgba(255, 165, 0, 0.6);
  box-shadow: 0 0 24px 4px rgba(255, 165, 0, 0.3),
    inset 0 0 20px rgba(255, 165, 0, 0.1);
}

.glassButtonDebug svg {
  filter: drop-shadow(0 0 4px rgba(255, 165, 0, 0.5));
}

.glassButtonDebug:hover svg {
  filter: drop-shadow(0 0 6px rgba(255, 165, 0, 0.7));
}

/* Control buttons (settings, minimize, close) */
.controlButton {
  /* Layout */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;

  /* Glassmorphism effect */
  background: rgba(24, 24, 40, 0.55);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  backdrop-filter: blur(20px) saturate(180%);

  /* Border and shadow */
  border: 2px solid rgba(0, 250, 255, 0.3);
  box-shadow: 0 4px 16px 0 rgba(0, 250, 255, 0.1),
    inset 0 0 20px rgba(0, 250, 255, 0.03);

  /* Transitions */
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.controlButton:hover {
  background: rgba(0, 250, 255, 0.1);
  border-color: rgba(0, 250, 255, 0.6);
  box-shadow: 0 0 20px 3px rgba(0, 250, 255, 0.25),
    inset 0 0 20px rgba(0, 250, 255, 0.08);
  transform: scale(1.05);
}

.controlButton:active {
  transform: scale(0.95);
}

.controlButton:focus {
  outline: none;
}

.controlButton:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 250, 255, 0.4),
    0 0 20px 3px rgba(0, 250, 255, 0.25);
}

/* Settings button with rotation */
.settingsButton {
  composes: controlButton;
}

.settingsButton:hover {
  animation: quantumSpin 4.5s linear infinite;
}

/* Close button variant */
.closeButton {
  composes: controlButton;
  border-color: rgba(255, 68, 85, 0.3);
  box-shadow: 0 4px 16px 0 rgba(255, 68, 85, 0.1),
    inset 0 0 20px rgba(255, 68, 85, 0.03);
}

.closeButton:hover {
  background: rgba(255, 68, 85, 0.1);
  border-color: rgba(255, 68, 85, 0.6);
  box-shadow: 0 0 20px 3px rgba(255, 68, 85, 0.25),
    inset 0 0 20px rgba(255, 68, 85, 0.08);
}

.logsIcon {
  display: inline;
  margin-right: 2px;
  vertical-align: middle;
  filter: drop-shadow(0 0 4px rgba(0, 250, 255, 0.53));
}
