name: Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., v0.0.1)'
        required: true
        default: 'v0.0.1'

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win  
          - os: ubuntu-20.04
            platform: linux
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config cairo pango libpng jpeg giflib librsvg pixman
          
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxss1 libasound2-dev libxtst6 libxrandr2 libgconf-2-4 libxdamage1 libgtk-3-dev libxcomposite-dev libxcursor1 libxi6 libxext6 libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev libpixman-1-dev
          
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          npm install --global windows-build-tools || echo "Build tools installation completed"
        shell: powershell
          
      - name: Clean install dependencies
        run: |
          npm ci --no-audit --prefer-offline
          
      - name: Verify build scripts
        run: |
          npm run build:renderer
          npm run build:main
        
      - name: Build and publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: npm run dist:${{ matrix.platform }}
        
      - name: Upload build artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs-${{ matrix.platform }}
          path: |
            dist/
            dist-electron/
            *.log
            npm-debug.log*
          retention-days: 7
